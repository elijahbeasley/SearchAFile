@page
@model SearchAFile.Web.Pages.FileGroups.EditModel

<form method="post" enctype="multipart/form-data">

    <input asp-for="FileGroup.FileGroupId" hidden />
    <div id="divValidationSummary" asp-validation-summary="All" hidden></div>

    <div class="card">

        <div class="card-header">
            <label class="fs-5"><i class="fa-solid fa-pen-to-square text-primary"></i> @Model.FileGroup.FileGroup1</label>
        </div>

        <div class="card-body cus-bootstrap-table-striped p-0">

            <div class="row align-items-center m-0">
                <div class="cus-col col-sm-6">
                    <div class="form-floating">
                        <select asp-for="FileGroup.Active" class="form-select">
                            <option value="" hidden>- Status -</option>
                            <option value="True">Active</option>
                            <option value="False">Inactive</option>
                        </select>
                        <label asp-for="FileGroup.Active" class="control-label" show-asterisk="true"></label>
                        <span asp-validation-for="FileGroup.Active" class="text-danger"></span>
                    </div>
                </div>
                <div class="cus-col col-sm-6">
                    <div class="form-floating">
                        <input type="text" asp-for="FileGroup.FileGroup1" class="form-control" placeholder="@Html.DisplayNameFor(model => model.FileGroup.FileGroup1)" />
                        <label asp-for="FileGroup.FileGroup1" class="control-label" show-asterisk="true"></label>
                        <span asp-validation-for="FileGroup.FileGroup1" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row align-items-top m-0">
                <div class="cus-col col-sm-4">
                    <div class="mb-2">
                        <label asp-for="FileGroup.ImageUrl"></label>
                        <input id="ImageUrl" class="form-control" type="file" asp-for="IFormFile" onchange="SelectFile(this, 'ImageUrl');">
                        <span asp-validation-for="IFormFile" class="text-danger"></span>
                    </div>
                    <div class="d-flex justify-content-center" style="height: 75px;">
                        <img id="ImageUrlPreview" class="d-block" style="max-height: 75px; max-width: 100%;" src="@(string.IsNullOrEmpty(Model.FileGroup.ImageUrl) ? SystemFunctions.EmptyImageSource : "/FileGroups/" + Model.FileGroup.ImageUrl)">
                    </div>
                </div>
            </div>

        </div>

        <div class="card-footer text-center">
            <a asp-page="./Index" class="btn btn-outline-secondary">
                <i class="fa-solid fa-arrow-left"></i>
                Back to List
            </a>
            <button type="submit" class="btn btn-success">
                Save
                <i class="fa-solid fa-save"></i>
            </button>
        </div>

    </div>

</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">

        function CalculateFileSizes() {

            var totalFileSize = 0;
            var totalFileSizeMB = 0;

            $('input:file').each(function () {

                if (this.files[0] != null) {

                    totalFileSize += this.files[0].size;
                }
            });

            if (totalFileSize > 0) {

                // 1024
                totalFileSizeMB = totalFileSize / Math.pow(1024, 2);
            }

            $('#lblTotalFileSize').text(totalFileSizeMB.toFixed(2) + 'MB')
        }

        function ClearFile(e, id) {

            $('#' + id + 'Preview').prop('src', '@SystemFunctions.EmptyImageSource');

            $(e).find('input:file').val('');
            $(e).parent('div').find('input:text').val('');
            $(e).parent('div').find('input:text').prop('title', '');
            CalculateFileSizes();
        }

        function SelectFile(e, id) {

            let errors = '';

            if (e.files[0].size > MaxFileSize) {

                errors += '<li>Invalid file selected. File size must not exceed ' + (MaxFileSize / Math.pow(1024, 2)).toFixed(2) + 'MB.</li>';
            }

            let fileExtension = ['png', 'jpeg', 'jpg'];

            if ($.inArray($(e).val().split('.').pop().toLowerCase(), fileExtension) == -1) {

                errors += '<li>Invalid file selected. File must be of type: ' + fileExtension.join(', ') + '.</li>';
            }

            if (errors == '') {

                let totalFileSize = 0;

                $('input:file').each(function () {

                    if (this.files[0] != null) {

                        totalFileSize += this.files[0].size;
                    }
                });

                if (totalFileSize > MaxFileSize) {

                    let totalFileSizeMB = totalFileSize - e.files[0].size;

                    if (totalFileSize > 0) {

                        // 1024
                        totalFileSizeMB = totalFileSizeMB / Math.pow(1024, 2);
                    }

                    errors += '<li>Invalid file selected. The total file size(s) must not exceed ' + (MaxFileSize / Math.pow(1024, 2)).toFixed(2) + 'MB. The current file size(s) is ' + totalFileSizeMB.toFixed(2) + 'MB.</li>';
                }
            }

            if (errors !== '') {

                $('#' + id).addClass('input-validation-error');
                $(e).val('');
                $(e).parent('div').parent('div').find('input:text').val('');
                $(e).parent('div').parent('div').find('input:text').prop('title', '');

                window.top.ClearToast();
                window.top.ShowToast('danger', 'The following errors have occured', '<ul>' + errors + '</ul>', 0, false);
            }
            else {

                $('#' + id).removeClass('input-validation-error');
                $(e).parent('div').parent('div').find('input:text').val(e.files[0].name);
                $(e).parent('div').parent('div').find('input:text').prop('title', e.files[0].name);

                // Display the file.
                var reader = new FileReader();
                reader.onload = function (element) {
                    $('#' + id + 'Preview').prop('src', element.target.result);
                }
                reader.readAsDataURL($(e)[0].files[0]);
            }

            CalculateFileSizes();
        }

    </script>

}