@page
@using SearchAFile.Web.Helpers;
@model SearchAFile.Web.Pages.Files.IndexModel

<style>

    .file-icon-wrapper {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 0.5rem;
        cursor: pointer;
        padding: 2rem 1rem;
        position: relative;
        transition: box-shadow 0.2s;
        height: 10rem; /* or whatever fixed height works visually */
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .file-name {
        margin-top: 0.5rem;
        max-width: 100%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 0.9rem;
        color: #007bff;
        text-decoration: underline;
        cursor: pointer;
    }

    .file-icon-wrapper:hover {
        box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.2);
    }

    .file-icon {
        color: #6c757d;
        font-size: 3rem;
    }

    .edit-btn,
    .delete-btn {
        background: transparent;
        border: none;
        padding: 0.25rem;
        font-size: 1rem;
        visibility: hidden;
    }

    .file-icon-wrapper:hover .edit-btn,
    .file-icon-wrapper:hover .delete-btn {
        visibility: visible;
    }

    /* ✅ Always show trash icon on small screens */
    @@media (max-width: 991.98px) {
        .edit-btn,
        .delete-btn {
            visibility: visible !important;
        }
    }

</style>

<div class="pb-3">
    <a asp-page="/Collections/Index" title="Collections">
        <i class="fa-solid fa-arrow-left"></i>
        Back
    </a>
</div>

<div class="card">

    <div class="card-header d-flex justify-content-between align-items-center" style="border-bottom: 3px solid var(--secondary-color);">
        <label class="fs-5 pe-3" style="white-space: nowrap;"><i class="fa-solid fa-folder-open cus-text-primary-no-hover"></i> @Model.Collection.Collection1 Files (@(Model.Files == null ? "0" : Model.Files.Count())/20)</label>
        <form method="get">
            <input type="hidden" name="id" value="@Request.Query["id"]" />
            <div class="input-group">
                <input asp-for="search" class="form-control" type="search" placeholder="Search files..." onchange="if (this.value === '') {this.form.submit(); }" />
                <button type="submit" class="btn btn-primary">
                    <i class="fa-solid fa-magnifying-glass"></i>
                </button>
            </div>
        </form>
    </div>

    <div class="card-body p-0">

        <div id="divLoadingBlock">

            <div class="p-3">
                @if (Model.Files == null
                                || Model.Files.Count() < 20)
                {
                    <button class="btn btn-outline-success w-100" onclick="UploadFile();">
                        <i class="fa-solid fa-plus-circle"></i>
                        Upload File
                    </button>
                }
                else
                {
                    <div data-bs-toggle="tooltip" data-bs-title="File limit reached (20)" data-bs-position="top">
                        <button class="btn btn-outline-success w-100" disabled>
                            <i class="fa-solid fa-plus-circle"></i>
                            Upload File
                        </button>
                    </div>
                }
            </div>

            @if (Model.Files != null
                && Model.Files.Any())
            {
                int columnsPerRow = DeviceHelper.IsMobileDeviceBrowser() ? 4 : 6; // because col-2 means 12 / 2 = 6 columns per row
                int fileCount = Model.Files.Count();
                int remainder = fileCount % columnsPerRow;
                int fillerCount = remainder == 0 ? 0 : columnsPerRow - remainder;

                <div class="container-fluid mb-3">
                    <div class="row g-3">
                        @foreach (var item in Model.Files)
                        {
                            string iconClass = item.Extension switch
                            {
                                "pdf" => "fa-file-pdf text-danger",
                                "doc" or "docx" => "fa-file-word text-primary",
                                "xls" or "xlsx" => "fa-file-excel text-success",
                                "csv" => "fa-file-csv text-success",
                                "ppt" or "pptx" => "fa-file-powerpoint text-warning",
                                "jpg" or "jpeg" or "png" or "gif" => "fa-file-image text-info",
                                "zip" or "rar" => "fa-file-archive text-secondary",
                                "txt" => "fa-file-lines text-muted",
                                "mp3" or "wav" => "fa-file-audio text-warning",
                                "mp4" or "mov" or "avi" => "fa-file-video text-dark",
                                _ => "fa-file text-secondary" // default
                            };

                            <div class="col-6 col-sm-4 col-md-3 col-lg-2">
                                <a href="~/Files/@item.Path" target="_blank">
                                    <div class="file-icon-wrapper position-relative text-center">
                                        <i class="file-icon fa-solid @iconClass"></i>
                                        <button type="button" class="edit-btn position-absolute top-0 start-0 ms-1" title="Edit" onclick="editFile('@item.FileId', event)">
                                            <i class="fa-solid fa-pen-to-square cus-bs-text-primary"></i>
                                        </button>
                                        <button type="button" class="delete-btn position-absolute top-0 end-0 me-1" title="Delete" onclick="deleteFile('@item.FileId', event)">
                                            <i class="fa-solid fa-trash cus-text-danger"></i>
                                        </button>
                                        <div class="file-name" title="@item.File1">
                                            @item.File1
                                        </div>
                                    </div>
                                </a>
                            </div>
                        }
                        @for (int i = 0; i < fillerCount; i++)
                        {
                            <div class="col-6 col-sm-4 col-md-3 col-lg-2"></div>
                        }
                    </div>
                </div>

            }
            else
            {
                <div class="pb-3 text-center text-secondary cus-no-select">
                    <i>No existing files</i>
                </div>
            }
        </div>

    </div>

</div>

@await Html.PartialAsync("~/Pages/Shared/_ModalPartial.cshtml", "modal-md")

@section Scripts {

    <script type="text/javascript">

        const id = new URLSearchParams(window.location.search).get("id");

        function UploadFile() {

            window.top.ClearToast();

            if (PageIsLoaded){

                PageIsLoaded = false;
                StartLoading('#divLoadingBlock');
            }

            $('#ifrModal').attr('src', '/Files/Create?id=' + id);
        }

        function editFile(id, event) {

            event.stopPropagation(); // prevents bubbling to parent
            event.preventDefault();  // optional: prevents default link/button behavior

            window.top.ClearToast();

            if (PageIsLoaded){

                PageIsLoaded = false;
                StartLoading('#divLoadingBlock');
            }

            $('#ifrModal').attr('src', '/Files/Edit?id=' + id);
        }

        function deleteFile(id, event) {

            event.stopPropagation(); // prevents bubbling to parent
            event.preventDefault();  // optional: prevents default link/button behavior

            if (!confirm("Are you sure you want to delete this file?")) return;

            if (PageIsLoaded){

                PageIsLoaded = false;
                StartLoading('#divLoadingBlock');
            }

            $.ajax({
                url: PageURL + '/Index?handler=Delete',
                type: 'GET',
                contentType: 'application/json',
                data: {
                    id: id
                },
                success: function (response) {

                    if (response.success) {

                        location.reload();
                    } else {

                        window.top.ShowToast('danger', 'Error!', response.message || 'Unable to delete file.', 0, false);
                    }
                },
                error: function (xhr) {

                    window.top.ShowToast('danger', 'Error!', 'An error occurred while deleting the file:' + xhr.responseText, 0, false);
                }
            });
        }

    </script>
}