@page
@model SearchAFile.Pages.Common.AccountSettingsModel
@using SearchAFile.Core.Domain.Entities;
@{
    Model.User = HttpContext.Session.GetObject<UserDto>("User");
}

<form id="objForm" method="post" enctype="multipart/form-data" onsubmit="$(document.activeElement.prop('disabled', $(this).valid());" autocomplete="new-password">

    <div id="divValidationSummary" asp-validation-summary="All" hidden></div>

    <div id="divData">

        <div id="divLoadingBlock" class="container card p-0">

            <div class="card-header d-flex align-items-center cus-no-select" style="background-color: lightgray; border-bottom: 3px solid var(--secondary-color);">
                <div class="cus-hover-image-container cus-image-size" onclick="$('#divUploadImage').modal('show');" title="Upload New Headshot" data-bs-custom-class="cus-tooltip-light" data-bs-html="true" data-bs-placement="top" data-bs-toggle="tooltip">
                    <img class="cus-hover-image cus-image-size" onerror="this.onerror = null; this.src='/UserFiles/Generic.jpg';" src="~/UserFiles/@(string.IsNullOrEmpty(Model.User.HeadshotPath) ? "Generic.jpg" : Model.User.HeadshotPath)" style="border-radius: 50%;" />
                    <div class="cus-hover-image-middle">
                        <div class="cus-hover-image-text">
                            <i class="fa-solid fa-upload fa-2x"></i>
                        </div>
                    </div>
                </div>

                <div class="ps-1 ms-auto text-end cus-no-select cus-User-info-header" style="white-space: nowrap;">
                    @if (HttpContext.Session.GetObject<Company>("Company") != null)
                    {
                        <div class="d-inline text-center" style="border-bottom: 2px solid var(--primary-color);">
                            <label class="w-100 fw-bold">@(HttpContext.Session.GetObject<Company>("Company").Company1)</label>
                        </div>
                        <br />
                    }
                    <table>
                        <tr>
                            <td>
                                <label class="fw-bold float-start">Status:</label>
                                &nbsp;
                            </td>
                            <td>
                                @if (Convert.ToBoolean(Model.User.Active))
                                {
                                    <span class="badge bg-success text-white w-100">
                                        Active
                                        <i class="fa-solid fa-check"></i>
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-danger text-white w-100">
                                        Inactive
                                        <i class="fa-solid fa-xmark"></i>
                                    </span>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label class="fw-bold float-start">Role:</label>
                                &nbsp;
                            </td>
                            <td>

                                @switch (Model.User.Role)
                                {
                                    case "System Admin":
                                    case "Admin":
                                    case "Company Admin":

                                        <span class="badge bg-danger w-100">
                                            @Html.DisplayFor(model => model.User.Role)
                                        </span>
                                        break;

                                    default:

                                        <span class="badge cus-bg-primary w-100">
                                            @Html.DisplayFor(model => model.User.Role)
                                        </span>
                                        break;
                                }
                            </td>
                        </tr>
                    </table>
                </div>

            </div>

            <div class="card-body cus-bootstrap-table-striped p-0">

                <div class="row align-items-center m-0">
                    <div class="cus-col col-md-6">
                        <div class="form-floating">
                            <input asp-for="User.FirstName" type="text" class="form-control" disabled placeholder="John" autocomplete="new-password" />
                            <label asp-for="User.FirstName" class="fw-bold">@Html.DisplayNameFor(model => model.User.FirstName)<span class="text-danger">*</span></label>
                        </div>
                    </div>
                    <div class="cus-col col-md-6">
                        <div class="form-floating">
                            <input asp-for="User.LastName" type="text" class="form-control" disabled placeholder="Smith" autocomplete="new-password" />
                            <label asp-for="User.LastName" class="fw-bold">@Html.DisplayNameFor(model => model.User.LastName)<span class="text-danger">*</span></label>
                        </div>
                    </div>
                </div>
            
                <div class="row align-items-center m-0">
                    <div class="cus-col col-md-4">
                        <div class="form-floating">
                            <input id="txtEmailAddress" asp-for="User.EmailAddress" type="email" class="form-control" disabled placeholder="name@example.com" autocomplete="new-password" />
                            <label asp-for="User.EmailAddress" class="fw-bold">@Html.DisplayNameFor(model => model.User.EmailAddress)<span class="text-danger">*</span></label>
                        </div>
                    </div>
                    <div class="cus-col col-md-4">
                        <div class="form-floating">
                            <input id="txtFlota" asp-for="User.PhoneNumber" type="text" class="form-control" disabled placeholder="___-___-____" data-bs-slots="_" />
                            <label asp-for="User.PhoneNumber" class="fw-bold">@Html.DisplayNameFor(model => model.User.PhoneNumber)</label>
                        </div>
                    </div>
                    <div class="cus-col col-md-4">
                        <button type="button" class="btn btn-success w-100" onclick="ChangePassword();">
                            Change Password
                            <i class="fa-duotone fa-solid fa-lock"></i>
                        </button>
                    </div>
                </div>

            </div>

            <div class="card-footer text-center cus-no-select">
                <button id="btnModify" type="button" class="btn btn-outline-primary" onclick="Modify();" style="min-width: 20%;">
                    Modify
                    <i class="fa-duotone fa-solid fa-pen-to-square"></i>
                </button>
                <button id="btnSave" type="submit" asp-page-handler="Modify" class="btn btn-outline-success" onclick="Save();" style="display: none; min-width: 20%;">
                    <span id="lblSubmit" style="color: unset;">
                        Save
                        <i class="fa-duotone fa-regular fa-save"></i>
                    </span>
                    <img id="imgSubmit" src="~/SystemFiles/loading.gif" style="display: none; height: 20px; width: 20px;" />
                </button>
                <button id="btnCancel" type="reset" class="btn btn-outline-danger" onclick="Cancel();" style="display: none; min-width: 20%;">
                    Cancel
                    <i class="fa-duotone fa-solid fa-ban"></i>
                </button>
            </div>

        </div>

        <!-- Image Modal -->
        <div class="modal fade" id="divUploadImage" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-md">
                <div class="modal-content card">

                    <div class="card-header d-flex align-items-center cus-no-select fs-6" style="background-color: var(--primary-color); border-bottom: 2px solid var(--secondary-color);">
                        <label class="cus-card-header h-auto cus-text-secondary-text-no-hover">
                            <i class="fa-solid fa-upload fs-5 me-1 cus-text-secondary-text-no-hover"></i>
                            Upload New Headshot
                        </label>
                        <button type="button" class="btn p-0 m-0 ms-auto cus-text-secondary-text" data-bs-dismiss="modal" onclick="CancelUpload(); window.top.ClearToast(); window.top.ShowSnack('warning', 'Operation cancelled. No data was affected.', 3000, true);" style="line-height: 1;" title="Cancel">
                            <i class="fa-solid fa-xmark fs-4"></i>
                        </button>
                    </div>

                    <div class="modal-body card-body cus-bootstrap-table-striped p-0">

                        <div class="row align-items-center m-0">
                            <div class="cus-col col-sm-4 fw-bold">
                                <label>Upload Image</label>
                                <i class="fa-solid fa-circle-question cus-text-primary" data-bs-boundary="viewport" data-bs-container="body" title="Allowed File Types" data-bs-content="<ul class='cus-popover-list'><li>png</li><li>jpeg</li><li>jpg</li></ul>" data-bs-html="true" data-bs-placement="top" data-bs-toggle="popover" onclick="$(this).popover('show');" onmouseleave="$(this).popover('hide');" style="cursor: pointer;"></i>
                            </div>
                            <div class="cus-col col-sm-8">
                                <div class="d-flex" style="max-width: var(--control-max-width);">
                                    <input id="fileName" class="fileName m-0" type="text" placeholder="No file selected" disabled="disabled" style="border-radius: 0.2rem 0 0 0.2rem; height: 2.9rem !important;" />
                                    <div class="fileUpload cus-btn-primary m-0" onclick="ClearFile(this);" style="border-radius: 0 0.25rem 0.25rem 0;">
                                        <span style="color: unset">
                                            Browse...
                                        </span>
                                        <i class="fa-solid fa-file-upload"></i>
                                        <input id="fileuploader" type="file" class="upload" asp-for="IFormFile" onchange="SelectFile(this);" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row align-items-center m-0">
                            <div class="cus-col col-sm-4 fw-bold">
                                <label>Preview</label>
                            </div>
                            <div class="cus-col col-sm-8" style="max-width: var(--control-max-width);">
                                <img id="imgPreview" height="100" width="100" style="border-radius: 50%;" src="@SystemFunctions.EmptyImageSource" />
                            </div>
                        </div>

                    </div>
                    <div class="card-footer text-center cus-no-select">
                        <button id="btnUploadImage" class="btn btn-outline-success" type="submit" asp-page-handler="UploadImage" onclick="return UploadImage();" style="min-width: 25%;">
                            <span id="lblSubmitUpload" style="color: unset;">
                                Save
                                <i class="fa-duotone fa-regular fa-save"></i>
                            </span>
                            <img id="imgSubmitUpload" src="~/SystemFiles/loading.gif" style="display: none; height: 20px; width: 20px;" />
                        </button>
                        <button class="btn btn-outline-danger" type="button" data-bs-dismiss="modal" onclick="CancelUpload(); window.top.ClearToast(); window.top.ShowSnack('warning', 'Operation cancelled. No data was affected.', 3000, true);" style="min-width: 25%;">
                            Cancel
                            <i class="fa-duotone fa-solid fa-ban"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

    </div>

</form>

<!-- Modal -->
<div class="modal fade" id="divModal" tabindex="-1" data-bs-backdrop="static">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content bg-transparent border-0">
            <div id="divLoadingBlockModal">
                <iframe id="ifrModal" frameborder="0" scrolling="no" style="height: 0; transition: all 0.5s ease-in-out; width: 100%;"></iframe>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">

        $('#divUploadImage').on('keypress', function (event) {

            let keycode = (event.keyCode ? event.keyCode : event.which);

            if (keycode == '13') {

                event.preventDefault();
                $('#btnUploadImage').click();
            }
        });

        function Modify() {

            $('select').prop('disabled', false);
            $('input').prop('disabled', false);
            $('#btnModify').toggle();
            $('#btnSave').toggle();
            $('#btnCancel').toggle();
        }

        function Save() {

            // Clear out the messages.
            window.top.ClearToast();

            // Validate the page.
            $('#objForm').validate();

            // Is the form valid?
            if (!$('#objForm').valid()) { // No, the form is NOT valid.

                // Output the errors.
                 window.top.ShowToast("danger", "The following errors have occured", $('#divValidationSummary').html(), 0, false);
            }
            else {

                $('#btnSubmit').prop('disabled', true);
                $('#lblSubmit').toggle();
                $('#imgSubmit').toggle();

                if (PageIsLoaded){
                    
                    PageIsLoaded = false;
                    StartLoading('#divLoadingBlock');
                }
            }
        }

        function Cancel() {

            $('select').prop('disabled', true);
            $('input').prop('disabled', true);

            $('#btnModify').toggle();
            $('#btnSave').toggle();
            $('#btnCancel').toggle();
            ReloadData();
            window.top.ClearToast(); 
            window.top.ShowSnack('warning', 'Operation cancelled. No data was affected.', 3000, true);
        }

        function ReloadData() {

            // Refresh the table.
            $('#divData').load(PageURL + '?handler=Refresh #divData>*', function (response, status, xhr) {

                if (status == "error") {

                    window.location = window.location;
                }

                // Only run on desktop
                if (!is_mobile) {

                    // Initialize Bootstrap popovers and tooltips.
                    $(function () {
                        $('[data-bs-toggle="popover"]').popover();
                    })

                    document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(function (tooltipTriggerEl) {
                        new bootstrap.Tooltip(tooltipTriggerEl);
                    });
                }
            });
        }

        function ResizeModal() {

            $('#ifrModal').css('height', $('#ifrModal').contents().find('main').height() + 'px');
            $('#divLoadingBlockModal').css('height', $('#ifrModal').contents().find('main').height() + 'px');
        }

        function ShowModal() {

            if ($('#ifrModal').prop('src') != '') {

                $('#ifrModal').css('height', 0);

                StopLoading('#divLoadingBlockModal');

                // Show the modal.
                $('#divModal').modal('show');

                ResizeModal();
            }
        }

        function CloseModal() {

            // Hide the modal.
            $('.modal').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
        }

        function ChangePassword() {

            if (PageIsLoaded){

                PageIsLoaded = false;
                StartLoading('#divLoadingBlock');
            }

            window.top.ClearToast();

            $.ajax({
                type: 'GET',
                url: PageURL + '?handler=CheckID',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: {
                },
                success: function (response) {

                    const jsonResponse = $.parseJSON(response);

                    if (jsonResponse.booSuccess) {

                        $('#ifrModal').attr('src', 'ChangePassword');
                    }
                    else {

                         window.top.ShowToast('danger', 'Error!', jsonResponse.ErrorMessage.replace('\r', ' ').replace('\n', '<br />'), 0, false);
                        StopLoadingAll();
                    }
                }
            });
        }

        function UploadImage() {

            // Clear out the messages.
            window.top.ClearToast();

            // Validate the page.
            $('#objForm').validate();

            // Is the form valid?
            if (!$('#objForm').valid()) { // No, the form is NOT valid.

                if ($('#fileuploader').hasClass('input-validation-error')) {

                    $('#fileName').addClass('input-validation-error');
                }
                else {

                    $('#fileName').removeClass('input-validation-error');
                }

                // Output the errors.
                 window.top.ShowToast("danger", "The following errors have occured", $('#divValidationSummary').html(), 0, false);
            }
            else {

                CloseModal();
                $('#lblSubmitUpload').toggle();
                $('#imgSubmitUpload').toggle();

                if (PageIsLoaded) {

                    PageIsLoaded = false;
                    StartLoading('#divLoadingBlock');
                }
            }
        }

        function CalculateFileSizes() {

            var totalFileSize = 0;
            var totalFileSizeMB = 0;

            $('input:file').each(function () {

                if (this.files[0] != null) {

                    totalFileSize += this.files[0].size;
                }
            });

            if (totalFileSize > 0) {

                // 1024
                totalFileSizeMB = totalFileSize / Math.pow(1024, 2);
            }

            $('#lblTotalFileSize').text(totalFileSizeMB.toFixed(2) + 'MB')
        }

        function ClearFile(e) {

            $('#imgPreview').prop('src', '@SystemFunctions.EmptyImageSource');

            $(e).find('input:file').val('');
            $(e).parent('div').find('input:text').val('');
            $(e).parent('div').find('input:text').prop('title', '');
            CalculateFileSizes();
        }

        function SelectFile(e) {

            let errors = '';

            if (e.files[0].size > MaxFileSize) {

                errors += '<li>Invalid file selected. File size must not exceed ' + (MaxFileSize / Math.pow(1024, 2)).toFixed(2) + 'MB.</li>';
            }

            let fileExtension = ['png', 'jpeg', 'jpg'];

            if ($.inArray($(e).val().split('.').pop().toLowerCase(), fileExtension) == -1) {

                errors += '<li>Invalid file selected. File must be of type: ' + fileExtension.join(', ') + '.</li>';
            }

            if (errors == '') {

                let totalFileSize = 0;

                $('input:file').each(function () {

                    if (this.files[0] != null) {

                        totalFileSize += this.files[0].size;
                    }
                });

                if (totalFileSize > MaxFileSize) {

                    let totalFileSizeMB = totalFileSize - e.files[0].size;

                    if (totalFileSize > 0) {

                        // 1024
                        totalFileSizeMB = totalFileSizeMB / Math.pow(1024, 2);
                    }

                    errors += '<li>Invalid file selected. The total file size(s) must not exceed ' + (MaxFileSize / Math.pow(1024, 2)).toFixed(2) + 'MB. The current file size(s) is ' + totalFileSizeMB.toFixed(2) + 'MB.</li>';
                }
            }

            if (errors !== '') {

                $('#fileName').addClass('input-validation-error');
                $(e).val('');
                $(e).parent('div').parent('div').find('input:text').val('');
                $(e).parent('div').parent('div').find('input:text').prop('title', '');

                window.top.ClearToast();
                window.top.ShowToast('danger', 'The following errors have occured', '<ul>' + errors + '</ul>', 0, false);
            }
            else {

                $('#fileName').removeClass('input-validation-error');
                $(e).parent('div').parent('div').find('input:text').val(e.files[0].name);
                $(e).parent('div').parent('div').find('input:text').prop('title', e.files[0].name);

                // Display the file.
                var reader = new FileReader();
                reader.onload = function (element) {
                    $("#imgPreview").prop("src", element.target.result);
                }
                reader.readAsDataURL($(e)[0].files[0]);
            }

            CalculateFileSizes();
        }

        function CancelUpload() {

            $('#fileuploader').val('');
            $('#fileName').val('');
            $('#fileName').removeClass('input-validation-error');
            $('#imgPreview').prop('src', '@SystemFunctions.EmptyImageSource');
        }

    </script>
}