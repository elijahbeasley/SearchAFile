@page
@model SearchAFile.Web.Pages.Common.ChatxxModel

<style>

    .chat-body {
        display: flex;
        flex-direction: column;
        gap: 1.25rem;
        padding: 1rem;
        background-color: #f8f9fa;
    }

    /* Shared base for all messages */
    .chat-message {
        padding: 1rem;
        border-radius: 0.75rem;
        box-shadow: 0 1px 4px rgba(0, 0, 0, 0.06);
        max-width: 85%;
        font-size: 1rem;
        line-height: 1.5;
        white-space: pre-wrap;
        word-wrap: break-word;
        width: fit-content;
        display: inline-block;
    }

        /* User bubble */
        .chat-message.user {
            align-self: flex-end;
            background-color: #dcfce7;
            color: #166534;
            border: 1px solid #bbf7d0;
        }

        /* Bot bubble */
        .chat-message.bot {
            align-self: flex-start;
            background-color: #f4f4f5;
            color: #262626;
            border: 1px solid #e4e4e7;
        }

    /* Timestamp */
    .timestamp {
        display: block;
        text-align: right;
        font-size: 0.7rem;
        color: #999;
        margin-top: 0.25rem;
    }

</style>

<div class="pb-3">
    <a asp-page="@HttpContext.Session.GetString("DashboardURL")" title="Collections">
        <i class="fa-solid fa-arrow-left"></i>
        Back
    </a>
</div>

<form id="objForm" method="post">

    <div id="divValidationSummary" asp-validation-summary="All" hidden></div>

    <div class="card">

        <div class="card-header">
            <label class="fs-5"><i class="fa-solid fa-comments cus-text-primary-no-hover"></i> @Model.Collection.Collection1</label>
        </div>

        <div id="divLoadingBlock" class="card-body p-0" style="height: 0; overflow-y: auto;">
            <div id="divData">
                <div class="chat-body">
                    @Html.Raw(Model.Answer)
                </div>
                <div id="divEllipses" class="typing-indicator" style="display: none;">
                    <span></span><span></span><span></span>
                </div>
                <div id="divBottomSpacer" style="display: none; height: 100px;"></div>
            </div>
        </div>

        <div class="card-footer">
            <div class="input-group">
                <button asp-page-handler="StartNewChat" asp-route-id="@Model.Id" type="submit" class="btn btn-primary" formnovalidate>
                    <i class="fa fa-rotate-left"></i>
                    New Chat
                </button>
                <input id="txtQuestion" type="text" class="form-control" placeholder="Ask a question..." autocomplete="off" />
                <button id="btnSend" type="button" class="btn btn-success" onclick="Send();">
                    Send
                    <i class="fa fa-paper-plane"></i>
                </button>
            </div>
        </div>

    </div>

</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">

        let PageHeight;

        window.onload = function () {

            SetHeight();
            ClearQuestion();
        }

        $(window).resize(function () {

            SetHeight();
        });

        $(document).on('keypress', function (event) {

            let keycode = (event.keyCode ? event.keyCode : event.which);

            if (keycode == '13') {

                event.preventDefault();
                $('#btnSend').click();
            }
        });

        function Send() {
            $('.card-footer').find('button, input').prop('disabled', true);
            ClearToast();

            $('#objForm').validate();

            if (!$('#objForm').valid()) {
                window.top.ShowToast("danger", "The following errors have occured", $('#divValidationSummary').html(), 0, false);
            } else {
                const questionRaw = $('#txtQuestion').val()?.trim();
                const questionEncoded = encodeURIComponent(questionRaw);

                if (!questionRaw) return;

                // Append user message to chat
                const timestamp = new Date().toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });

                $('#divData .chat-body').append(`
                    <div class="chat-message user">
                        ${escapeHtml(questionRaw)}
                        <div class="timestamp">${timestamp}</div>
                    </div>
                `);

                // Show ellipses and bottom spacer
                $('#divEllipses').show();
                $('#divBottomSpacer').show();

                ClearQuestion();
                ScrollToBottom();

                // Load updated chat content via Ajax
                $('#divData').load(`${PageURL}?Question=${questionEncoded}&handler=Ask #divData>*`, function (response, status, xhr) {
                    
                    $('#divEllipses').hide();
                    $('#divBottomSpacer').hide();

                    if (status === "error") {
                        window.top.ShowToast("danger", "Error!", xhr.responseText, 0, false);
                    }

                    $('.card-footer').find('button, input').prop('disabled', false);
                    ScrollToBottom();
                });
            }
        }

        function SetHeight() {

            PageHeight = calculateDistanceBetweenElements('#divLoadingBlock', '#footer', 30);

            // $('#chatBody').height(calculateDistanceBetweenElements('#chatBody', '#footer', 45));
            $('#divLoadingBlock').height(0);

            $('#divLoadingBlock').animate({ height: PageHeight }, 500);

            ScrollToBottom();
        }

        // Clear the question.
        function ClearQuestion() {

            $("#txtQuestion").val('');
            $("#txtQuestion").focus();

            ScrollToBottom();
        }

        function ScrollToBottom() {

            $('#divLoadingBlock').animate({
                scrollTop: $('#divLoadingBlock')[0].scrollHeight
            }, 500);
        }

        function escapeHtml(text) {
            return $('<div>').text(text).html();
        }

    </script>

}